"use strict";(self.webpackChunkreact_blog=self.webpackChunkreact_blog||[]).push([[662],{983:(e,i,s)=>{s.r(i),s.d(i,{default:()=>r});var a=s(828);const t=s.p+"static/media/virtualDom.2efcb7ae0e5424377744.webp",l=s.p+"static/media/components.8055b8ecc9e8f3fa903a.png";var n=s(579);const r=()=>(0,n.jsxs)("section",{children:[(0,n.jsx)("p",{className:"colorBlue",children:"***** You all might wonder why react works so fast and what's the magic react does behind the scene ? *****"}),(0,n.jsxs)("ol",{children:[(0,n.jsx)("li",{children:"Virtual DOM"}),(0,n.jsx)("li",{children:"Reconciliation"}),(0,n.jsx)("li",{children:"Fiber Architecture"}),(0,n.jsx)("li",{children:"Babel"}),(0,n.jsx)("li",{children:"Component-based Architecture"})]}),(0,n.jsxs)("div",{className:a.A.inlineItems,children:[(0,n.jsxs)("div",{className:a.A.wid60,children:[(0,n.jsx)("h3",{className:a.A.subTitle,children:"Virtual DOM:-"}),(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"React creates a virtual representation of the actual DOM. When a component's state or props change, React updates the virtual DOM first."}),(0,n.jsx)("li",{children:"The virtual DOM is a lightweight copy of the actual DOM, and changes to it are computed very quickly."})]}),(0,n.jsx)("h3",{className:a.A.subTitle,children:"Reconciliation:-"}),(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:'React uses a process called reconciliation to update the actual DOM. It compares the virtual DOM with the actual DOM (also known as "diffing") and computes the minimum number of changes needed.'}),(0,n.jsx)("li",{children:"This way, React only updates parts of the actual DOM that have changed, rather than re-rendering the entire DOM."})]}),(0,n.jsx)("h3",{className:a.A.subTitle,children:"Fiber Architecture:-"}),(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Fiber is the new reconciliation algorithm introduced in React 16. It breaks down the rendering work into smaller units, called fibers, which can be paused, stopped, or resumed as needed. This makes the rendering process more flexible and efficient."}),(0,n.jsx)("li",{children:"Fiber allows React to be more responsive by working on the rendering in small, manageable chunks, prioritizing tasks to maintain a smooth and efficient user interface."})]}),(0,n.jsx)("h3",{className:a.A.subTitle,children:"Babel:-"}),(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Babel is like a translator for your React code, making it understandable to different browsers and ensuring smooth performance."}),(0,n.jsx)("li",{children:"Babel converts JSX syntax (which looks like HTML inside JavaScript) into regular JavaScript function calls that browsers can understand."})]}),(0,n.jsx)("h3",{className:a.A.subTitle,children:"Component-based Architecture:-"}),(0,n.jsx)("ul",{children:(0,n.jsx)("li",{children:"This architecture allows developers to break down complex UIs into smaller, reusable pieces called components."})})]}),(0,n.jsxs)("div",{className:a.A.wid40,children:[(0,n.jsx)("figure",{children:(0,n.jsx)("img",{src:t,alt:"virtual dom"})}),(0,n.jsx)("figure",{children:(0,n.jsx)("img",{src:l,alt:"component based architecture"})})]})]})]})},828:(e,i,s)=>{s.d(i,{A:()=>a});const a={heading:"styles_heading__KoPex",subHeading:"styles_subHeading__fGkF3",subTitle:"styles_subTitle__087kx",inlineItems:"styles_inlineItems__iHbv4",wid40:"styles_wid40__Cv-pF",wid60:"styles_wid60__5Wcjl",wid50:"styles_wid50__qOwaD",column2:"styles_column2__51Ifj",inlineImages:"styles_inlineImages__bUCic"}}}]);
//# sourceMappingURL=662.2099c6db.chunk.js.map